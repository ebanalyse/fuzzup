#---------------------------------------------------------------------
# Build, Test and Publish Package
#---------------------------------------------------------------------
name: build

on: [push]

jobs:

  Build:

    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v2

    - name: Cache Python packages
      uses: actions/cache@v2
      with: 
        path: ~/.cache/pip
        key: ${{ hashFiles('setup.py') }}-${{ hashFiles('dev-requirements.txt') }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install pip and dev requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r dev-requirements.txt

    - name: Run tests
      run: |
        python setup.py test

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: test-results/**/*.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
        flags: unittests

    - name: Deploy docs
      if: github.ref == 'refs/heads/main'
      run: |
        pip install .
        mkdocs gh-deploy --force
        
    - name: Build and publish to TEST PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      if: github.ref != 'refs/heads/main'
      run: |
        python setup.py sdist bdist_wheel
        twine upload -r testpypi dist/*
        
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      if: github.ref == 'refs/heads/main'
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*